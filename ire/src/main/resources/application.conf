akka {
  loglevel = DEBUG

  extensions = ["kamon.akka.Akka", "kamon.statsd.StatsD"]

  actor {
  default-dispatcher {
    # Number of messages processed by actors before switching
    throughput = 1000
  }
  }
}

# Kamon Metrics
# ~~~~~~~~~~~~~~

kamon {
  show-aspectj-missing-warning = false
  metric {

  # Time interval for collecting all metrics and send the snapshots to all subscribed actors.
  tick-interval = 10 seconds

  # Disables a big error message that will be typically logged if your application wasn't started
  # with the -javaagent:/path-to-aspectj-weaver.jar option. If you are only using KamonStandalone
  # it might be ok for you to turn this error off.
  disable-aspectj-weaver-missing-error = false

  # Specify if entities that do not match any include/exclude filter should be tracked.
  track-unmatched-entities = yes

  filters {
    akka-actor {
    includes = ["*/user/*"]
    excludes = [ "*/system/**", "*/user/IO-**", "*kamon*" ]
    }

    akka-router {
    includes = ["*/user/*"]
    excludes = []
    }

    akka-dispatcher {
    includes = ["*/user/*"]
    excludes = []
    }

    trace {
    includes = [ "**" ]
    excludes = [ ]
    }
  }
  }

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  statsd {
  # Hostname and port in which your StatsD is running. Remember that StatsD packets are sent using UDP and
  # setting unreachable hosts and/or not open ports wont be warned by the Kamon, your data wont go anywhere.
  hostname = "192.168.99.101"
  port = 8125

  # Interval between metrics data flushes to StatsD. It's value must be equal or greater than the
  # kamon.metrics.tick-interval setting.
  flush-interval = 10 seconds

  # Max packet size for UDP metrics data sent to StatsD.
  max-packet-size = 1024 bytes

  # Subscription patterns used to select which metrics will be pushed to StatsD. Note that first, metrics
  # collection for your desired entities must be activated under the kamon.metrics.filters settings.
  includes {
    actor     = [ "*" ]
    trace     = [ "*" ]
    dispatcher  = [ "*" ]
  }

  simple-metric-key-generator {
    # Application prefix for all metrics pushed to StatsD. The default namespacing scheme for metrics follows
    # this pattern:
    #  application.host.entity.entity-name.metric-name
    application = "naive-rete"
  }
  }
  modules {
  kamon-log-reporter.auto-start = no
  kamon-system-metrics.auto-start = yes
  kamon-statsd.auto-start = yes
  kamon-akka.auto-start = yes
  }
}
